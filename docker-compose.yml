version: '3.8'

services:
  # PHP Application
  app:
    image: ${ECR_REPOSITORY_URI}:latest
    container_name: laravel-api-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./docker/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - laravel-network
    depends_on:
      - db
      - redis

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: laravel-api-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - laravel-network
    depends_on:
      - app

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: laravel-api-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - laravel-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD:-password}"]
      retries: 3
      timeout: 5s

  # Redis for Cache and Queue
  redis:
    image: redis:alpine
    container_name: laravel-api-redis
    restart: unless-stopped
    networks:
      - laravel-network
    volumes:
      - redis-data:/data

  # PHPMyAdmin for Database Management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel-api-phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
    networks:
      - laravel-network
    depends_on:
      - db

# Volumes
volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local

# Networks
networks:
  laravel-network:
    driver: bridge
